version: "3.8"

services:
  q-structurize:
    build:
      context: .
      dockerfile: Dockerfile
    image: q-structurize:cpu
    container_name: q-structurize
    ports:
      - "8878:8000"

    # Persist data and caches to avoid re-downloading models
    volumes:
      - ./uploads:/app/uploads
      - docling_models:/root/.cache/docling/models
      - hf_cache:/app/.cache/huggingface

    environment:
      - PYTHONPATH=/app
      # (Other envs are set in Dockerfile)

    restart: unless-stopped

    # Compose (non-Swarm) resource hints
    # Use these only if you really need to constrain:
    # mem_limit works with compose; cpus is supported by recent compose versions.
    # Note: Adjust these for your deployment environment
    # - Local Mac: cpus: 8 (or less)
    # - Production Ubuntu with 2x Xeon 6960P: cpus: 144, mem_limit: 256g
    mem_limit: 16g
    cpus: 7

    # Healthcheck: point to a real 200 endpoint (e.g., /healthz)
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "3"

volumes:
  docling_models:
  hf_cache:
